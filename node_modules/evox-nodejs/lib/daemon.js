'use strict';
var http = require('http');

class Daemon {
    constructor(hostname, port) {
        this.hostname = hostname || '127.0.0.1';
        this.port = port || 52922;
    }
}
//daemon
// general API daemon request
Daemon.prototype._request = function (body) {
    // encode the request into JSON
    let requestJSON = JSON.stringify(body);

    // set basic headers
    let headers = {};
    headers['Content-Type'] = 'application/json';
    headers['Content-Length'] = Buffer.byteLength(requestJSON, 'utf8');

    // make a request to the wallet
    let options = {
        hostname: this.hostname,
        port: this.port,
        path: '/json_rpc',
        method: 'POST',
        headers: headers
    };
    let requestPromise = new Promise((resolve, reject) => {
        let data = '';
        let req = http.request(options, (res) => {
            res.setEncoding('utf8');
            res.on('data', (chunk) => { data += chunk; });
            res.on('end', function() {
                let body = JSON.parse(data);
                if(body && body.result) {
                    resolve(body.result);
                } else if (body && body.error) {
                    resolve(body.error);
                } else {
                    resolve('Wallet response error. Please try again.');
                }
            });
        });
        req.on('error', (e) => resolve(e));
        req.write(requestJSON);
        req.end();
    });

    return requestPromise;
};
// build request body
Daemon.prototype._body = function (method, params) {
    let body = {
        jsonrpc: '2.0',
        id: '0',
        method: method,
        params: params
    };
    return this._request(body);
};

/**
 * Wallet Methods
 * @type {Daemon}
 */

// returns the wallet balance
Daemon.prototype.getInfo = function() {
    let method = 'get_info';
    return this._body(method);
};
Daemon.prototype.getHeight = function() {
    let method = 'get_height';
    return this._body(method);
};
//daemon end
module.exports = Daemon;
// helper function to convert Arqma amount to atomic units
function convert(amount) {
    let number = Number(amount) * 1e9;
    // remove any decimals
    number = number.toFixed(0);
    return Number(number);
}
